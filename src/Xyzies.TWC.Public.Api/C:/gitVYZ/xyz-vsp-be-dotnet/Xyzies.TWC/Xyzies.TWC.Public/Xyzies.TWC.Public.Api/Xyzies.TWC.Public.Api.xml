<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Xyzies.TWC.Public.Api</name>
    </assembly>
    <members>
        <member name="T:Xyzies.TWC.Public.Api.AppDataContextFactory">
            <summary>
            Remove
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.AppDataContextFactory.CreateDbContext(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.CablePortalAppDataContextFactory">
            <summary>
            Remove
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.CablePortalAppDataContextFactory.CreateDbContext(System.String[])">
            <summary>
            
            </summary>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Controllers.BranchController">
            <summary>
            Resource of branch
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.#ctor(Microsoft.Extensions.Logging.ILogger{Xyzies.TWC.Public.Api.Controllers.BranchController},Xyzies.TWC.Public.Data.Repositories.Interfaces.IBranchRepository,Xyzies.TWC.Public.Api.Managers.IBranchManager)">
            <summary>
            Ctor with dependencies
            </summary>
            <param name="logger"></param>
            <param name="branchRepository"></param>
            <param name="branchManager"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Get(Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            Returns a list of branches of companies
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Get(System.String)">
            <summary>
            Returns a list of branches of companies for trusted microservice by token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Get(System.Guid)">
            <summary>
            Returns a branch selected by ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.GetBranchesOfCompany(System.Int32,Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            Returns all found branches related to the specific company
            </summary>
            <param name="companyId"></param>
            <param name="filterModel"></param>
            <param name="sortable"></param>
            <param name="paginable"></param>
            <returns></returns>
            <response code="200">List of branches related to the specific company</response>
            <response code="400">Some input params were wrong</response>
            <response code="404">Company not found</response>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.GetBranchesOfCompanyTrusted(System.Int32,System.String,Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            Returns all found branches related to the specific company
            </summary>
            <param name="companyId"></param>
            <param name="filterModel"></param>
            <param name="sortable"></param>
            <param name="paginable"></param>
            <returns></returns>
            <response code="200">List of branches related to the specific company by truested token</response>
            <response code="400">Some input params were wrong</response>
            <response code="404">Company not found</response>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Post(Xyzies.TWC.Public.Api.Models.CreateBranchModel)">
            <summary>
            POST api/branches
            </summary>
            <param name="branchModel"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Put(System.Guid,Xyzies.TWC.Public.Api.Models.CreateBranchModel)">
            <summary>
            api/branch/5
            </summary>
            <param name="id"></param>
            <param name="branchModel"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Patch(System.Guid,System.Boolean)">
            <summary>
            Change status of branch
            </summary>
            <param name="id"></param>
            <param name="isEnabled"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.GetAnyBranchAsync(Xyzies.TWC.Public.Api.Models.BranchMinRequestModel,System.String)">
            <summary>
            Get any branch by id or by name
            </summary>
            <param name="requestModel"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.BranchController.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Controllers.CompanyController">
            <summary>
            
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.#ctor(Microsoft.Extensions.Logging.ILogger{Xyzies.TWC.Public.Api.Controllers.CompanyController},Xyzies.TWC.Public.Data.Repositories.Interfaces.ICompanyRepository,Xyzies.TWC.Public.Api.Managers.ICompanyManager,Xyzies.TWC.Public.Api.Managers.Interfaces.ICompanyAvatarsManager)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="companyRepository"></param>
            <param name="companyManager"></param>
            <param name="companyAvatarsManager"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Get(Xyzies.TWC.Public.Api.Models.CompanyFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            GET api/company
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Get(System.String)">
            <summary>
            Returns a list of companies for trusted microservice by token
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Get(System.Int32)">
            <summary>
            GET api/company/5
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Post(Xyzies.TWC.Public.Api.Models.CreateCompanyModel)">
            <summary>
            POST api/company
            </summary>
            <param name="companyModel"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Put(System.Int32,Xyzies.TWC.Public.Api.Models.CreateCompanyModel)">
            <summary>
            Update a company
            </summary>
            <param name="id"></param>
            <param name="companyModel"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Patch(System.Int32,System.Boolean)">
            <summary>
            Set enable/disable state for company
            </summary>
            <param name="id"></param>
            <param name="isEnabled"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Delete(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.UpdateCompanyAvatar(System.String,Xyzies.TWC.Public.Api.Models.AvatarModel)">
            <summary>
            Updates company avatar
            </summary>
            <param name="companyId">company id to update avatar</param>
            <param name="avatar">Avatar file</param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.GetAnyCompanyAsync(Xyzies.TWC.Public.Api.Models.CompanyMinRequestModel,System.String)">
            <summary>
            Get any company by id or by name
            </summary>
            <param name="requestModel"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.CompanyController.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Controllers.TenantController">
            <summary>
            Service provider controller
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.#ctor(Microsoft.Extensions.Logging.ILogger{Xyzies.TWC.Public.Api.Controllers.TenantController},Xyzies.TWC.Public.Api.Managers.Interfaces.ITenantManager)">
            <summary>
            Service provider constructor
            </summary>
            <param name="logger"></param>
            <param name="TenantService"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.Post(Xyzies.TWC.Public.Api.Models.TenantRequest)">
            <summary>
            Create service provider
            </summary>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.Put(System.Guid,Xyzies.TWC.Public.Api.Models.TenantRequest)">
            <summary>
            Update service provider by Id
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.Put(System.Int32,Xyzies.TWC.Public.Api.Models.TenantRequest)">
            <summary>
            Update service provider by Id
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.Get">
            <summary>
            Get service provider list
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.GetExtended(System.Guid)">
            <summary>
            Get service provider extended model by id(GUID)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.GetSingle(System.Guid)">
            <summary>
            Get service provider single model by id(GUID)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.Get(System.Int32)">
            <summary>
            Get service provider by company id(int)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.TenantController.GetSingle(System.Int32)">
            <summary>
            Get single model of service provider by company id(int)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Controllers.UsersController">
            <summary>
            Users controller
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.UsersController.#ctor(Xyzies.TWC.Public.Api.Managers.Relation.IRelationService)">
            <summary>
            Constructor with DI
            </summary>
            <param name="relationService">Relation service</param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Controllers.UsersController.GetUserOnCallWith(System.Int32)">
            <summary>
            Get user on call by operator's Cable Portal id
            </summary>
            <param name="cpUserId">Operator's Cable Portal id</param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Controllers.Http.Extentions.IModelHttpResult">
            <summary>
            
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.HostingEnvironmentExtension">
            <summary>
            Extension methods for Microsoft.AspNetCore.Hosting.IHostingEnvironment.
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.HostingEnvironmentExtension.IsLocal(Microsoft.AspNetCore.Hosting.IHostingEnvironment)">
            <summary>
            Checks if the current hosting environment name is Microsoft.AspNetCore.Hosting.EnvironmentName.Development.
            </summary>
            <param name="hostingEnvironment">An instance of Microsoft.AspNetCore.Hosting.IHostingEnvironment.</param>
            <returns>True if the environment name is Microsoft.AspNetCore.Hosting.EnvironmentName.Local, otherwise false.</returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Paginable">
            <summary>
            Represents a pagination model
            </summary>
        </member>
        <member name="F:Xyzies.TWC.Public.Api.Paginable.DEFAULT_PER_PAGE">
            <summary>
            15 items per page by default. You can change this value.
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Paginable.Skip">
            <summary>
            From
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Paginable.Take">
            <summary>
            Take next
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.PagingResult`1">
            <summary>
            Represents a pagination result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.PagingResult`1.Data">
            <summary>
            Collection of data
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.PagingResult`1.ReturnedRow">
            <summary>
            The actual result of returned rows
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.PagingResult`1.Total">
            <summary>
            Total length
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.PagingResult`1.ItemsPerPage">
            <summary>
            Number of items per page
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Sortable">
            <summary>
            Represents a data sorting model
            </summary>
        </member>
        <member name="F:Xyzies.TWC.Public.Api.Sortable.DEFAULT_SORT_BY">
            <summary>
            Default column name
            </summary>
        </member>
        <member name="F:Xyzies.TWC.Public.Api.Sortable.DEFAULT_SORT_ORDER">
            <summary>
            Default sorting direction
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Sortable.SortBy">
            <summary>
            Criteria of sorting (column)
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Sortable.SortOrder">
            <summary>
            Direction of sorting (allowed for asc/desc)
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Sortable.IsAscending">
            <summary>
            Is it ascending sorting direction
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Sortable.Direction">
            <summary>
            Sorting direction options
            </summary>
        </member>
        <member name="F:Xyzies.TWC.Public.Api.Sortable.Direction.Asc">
            <summary>
            Sorting by ascending
            </summary>
        </member>
        <member name="F:Xyzies.TWC.Public.Api.Sortable.Direction.Desc">
            <summary>
            Sorting by descending
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.BranchManager">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.#ctor(Microsoft.Extensions.Logging.ILogger{Xyzies.TWC.Public.Api.Managers.BranchManager},Xyzies.TWC.Public.Data.Repositories.Interfaces.IBranchRepository,Xyzies.TWC.Public.Data.Repositories.Interfaces.ICompanyRepository,Xyzies.TWC.Public.Data.Repositories.Interfaces.IUserRepository)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="branchRepository"></param>
            <param name="companyRepository"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.GetBranches(Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.GetBranchById(System.Guid)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.GetBranchesByCompany(System.Int32,Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.GetBranchesByUser(System.Collections.Generic.List{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.GetBranchesById(System.Collections.Generic.List{System.Guid})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.Filtering(Xyzies.TWC.Public.Api.Models.BranchFilter,System.Linq.IQueryable{Xyzies.TWC.Public.Data.Entities.Branch})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.GetAnyBranchAsync(Xyzies.TWC.Public.Api.Models.BranchMinRequestModel)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.Update(System.Guid,Xyzies.TWC.Public.Api.Models.CreateBranchModel)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.Sorting(Xyzies.TWC.Public.Api.Sortable,System.Linq.IQueryable{Xyzies.TWC.Public.Data.Entities.Branch})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.Pagination(Xyzies.TWC.Public.Api.Paginable,System.Linq.IQueryable{Xyzies.TWC.Public.Data.Entities.Branch})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.BranchManager.Dispose">
            <inheritdoc />
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.CompanyAvatarsManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyAvatarsManager.#ctor(Xyzies.TWC.Public.Data.Repositories.Azure.IAzureCompanyAvatarRepository)">
            <summary>
            Ctor
            </summary>
            <param name="azureCompanyAvatarRepository"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyAvatarsManager.UploadCompanyAvatarAsync(Xyzies.TWC.Public.Data.Entities.Azure.CompanyAvatar)">
            <summary>
            Asynchronic uploads companyAvatar
            </summary>
            <param name="companyAvatar"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.CompanyManager">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.#ctor(Microsoft.Extensions.Logging.ILogger{Xyzies.TWC.Public.Api.Managers.CompanyManager},Xyzies.TWC.Public.Data.Repositories.Interfaces.ITenantRepository,Xyzies.TWC.Public.Data.Repositories.Interfaces.IRequestStatusRepository,Xyzies.TWC.Public.Data.Repositories.Interfaces.ICompanyRepository,Xyzies.TWC.Public.Data.Repositories.Interfaces.IUserRepository,Xyzies.TWC.Public.Data.Repositories.Azure.IAzureCompanyAvatarRepository)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="companyRepository"></param>
            <param name="userRepository"></param>
            <param name="companyAvatarsRepository"></param>
            <param name="TenantManager"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.GetCompanies(Xyzies.TWC.Public.Api.Models.CompanyFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.GetCompanyById(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.GetCompanyByUser(System.Collections.Generic.List{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.GetCompanyNameById(System.Collections.Generic.List{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.Filtering(Xyzies.TWC.Public.Api.Models.CompanyFilter,System.Linq.IQueryable{Xyzies.TWC.Public.Data.Entities.Company})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.Sorting(Xyzies.TWC.Public.Api.Sortable,System.Linq.IQueryable{Xyzies.TWC.Public.Data.Entities.Company})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.Pagination(Xyzies.TWC.Public.Api.Paginable,System.Linq.IQueryable{Xyzies.TWC.Public.Data.Entities.Company})">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.CreateCompany(Xyzies.TWC.Public.Api.Models.CreateCompanyModel)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.Update(System.Int32,Xyzies.TWC.Public.Api.Models.CreateCompanyModel)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.GetAnyCompanyAsync(Xyzies.TWC.Public.Api.Models.CompanyMinRequestModel)">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.CompanyManager.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.IBranchManager">
            <summary>
            Facade of manage a branch requests
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.GetBranches(Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            Getting all branches or first 15 by defolt
            </summary>
            <param name="filter"></param>
            <param name="sortable"></param>
            <param name="paginable"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.GetBranchesByCompany(System.Int32,Xyzies.TWC.Public.Api.Models.BranchFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            Getting branches by company all or first 15 by defolt
            </summary>
            <param name="companyId"></param>
            <param name="filterModel"></param>
            <param name="sortable"></param>
            <param name="paginable"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.GetBranchById(System.Guid)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.GetBranchesByUser(System.Collections.Generic.List{System.Int32})">
            <summary>
            
            </summary>
            <param name="listUsersId"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.GetBranchesById(System.Collections.Generic.List{System.Guid})">
            <summary>
            
            </summary>
            <param name="branchIds"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.GetAnyBranchAsync(Xyzies.TWC.Public.Api.Models.BranchMinRequestModel)">
            <summary>
            Get any branch by id or by name
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.IBranchManager.Update(System.Guid,Xyzies.TWC.Public.Api.Models.CreateBranchModel)">
            <summary>
            Uodate
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.Interfaces.ICompanyAvatarsManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Interfaces.ICompanyAvatarsManager.UploadCompanyAvatarAsync(Xyzies.TWC.Public.Data.Entities.Azure.CompanyAvatar)">
            <summary>
            
            </summary>
            <param name="companyAvatar"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.ICompanyManager">
            <summary>
            Facade of manage a company requests
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.GetCompanies(Xyzies.TWC.Public.Api.Models.CompanyFilter,Xyzies.TWC.Public.Api.Sortable,Xyzies.TWC.Public.Api.Paginable)">
            <summary>
            Getting all companies or first 15 by defolt
            </summary>
            <param name="filter"></param>
            <param name="sortable"></param>
            <param name="paginable"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.GetCompanyById(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.GetCompanyByUser(System.Collections.Generic.List{System.Int32})">
            <summary>
            
            </summary>
            <param name="listUserIds"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.GetCompanyNameById(System.Collections.Generic.List{System.Int32})">
            <summary>
            
            </summary>
            <param name="companyIds"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.CreateCompany(Xyzies.TWC.Public.Api.Models.CreateCompanyModel)">
            <summary>
            Create new company
            </summary>
            <param name="createCompanyModel"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.GetAnyCompanyAsync(Xyzies.TWC.Public.Api.Models.CompanyMinRequestModel)">
            <summary>
            Get any company by id or by name
            </summary>
            <param name="requestModel"></param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.ICompanyManager.Update(System.Int32,Xyzies.TWC.Public.Api.Models.CreateCompanyModel)">
            <summary>
            Update company
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.Relation.IRelationService">
            <summary>
            Service to send requests to relation microservices
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.IRelationService.GetAzureUserByCPUserIdAsync(System.Int32)">
            <summary>
            Get user by his Cable Portal Id
            </summary>
            <param name="cpUserId">Cable Portal user id</param>
            <returns>User's profile or null if not found</returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.IRelationService.GetUserOnCallWithIdAsync(System.Int32)">
            <summary>
            Get user from current call in VSP by Cable Portal user's id
            </summary>
            <param name="cpUserId">Cable Portal user's id</param>
            <returns></returns>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.IRelationService.GetAzureUserByObjectIdAsync(System.String)">
            <summary>
            Get user by his Azure AD B2C Id
            </summary>
            <param name="objectId">Azure AD B2C user id</param>
            <returns>User's profile or null if not found</returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Managers.Relation.RelationService">
            <inheritdoc />
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.RelationService.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Xyzies.TWC.Public.Api.Models.Options.RelationOptions})">
            <summary>
            Constructor with DI
            </summary> 
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.RelationService.GetAzureUserByCPUserIdAsync(System.Int32)">
            <inheritdoc /> 
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.RelationService.GetAzureUserByObjectIdAsync(System.String)">
            <inheritdoc /> 
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Managers.Relation.RelationService.GetUserOnCallWithIdAsync(System.Int32)">
            <inheritdoc /> 
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.BranchFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.StateFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.CityFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.EmailFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.BranchNameFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.BranchIdFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.IsEnabledFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.UserCountFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.UserIds">
            <summary>
            filter for requests from, cancels all other filters
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchFilter.BranchIds">
            <summary>
            filter for requests from, cancels all other filters
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Models.BranchFilter.GetName">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.BranchMin">
            
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchMin.Id">
            
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchMin.BranchName">
            
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.BranchMin.CreatedDate">
            
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.Calls.ActiveCall">
            <summary>
            VSP Video MS active call model
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.Calls.ActiveCall.SalesRepId">
            <summary>
            Active call sales rep Azure AD B2C id
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.CompanyFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.StateFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.RequestStatusNames">
            <summary>
            Show company with all statuses
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.SearchFilter">
            <summary>
            Quick search by company name
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.DateFrom">
            <summary>
            Start date serching
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.DateTo">
            <summary>
            Terminated date serching
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.CityFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.EmailFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.CompanyNameFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.CompanyIdFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.IsEnabledFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.BranchCountFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.UserCountFilter">
            <summary>
            
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.UserIds">
            <summary>
            filter for requests from, cancels all other filters
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyFilter.CompanyIds">
            <summary>
            filter for requests from, cancels all other filters
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.CompanyMin">
            
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyMin.Id">
            
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyMin.CompanyName">
            
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CompanyMin.CreatedDate">
            
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.CompanyModelExtended">
            <summary>
            Add logo url
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.CreateBranchModel.IsStatusActive">
            <summary>
            0 - deactivated / 1 - activated
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.Options.RelationOptions">
            <summary>
            Options model for relation service
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.Options.RelationOptions.IdentityServiceUrl">
            <summary>
            Identity MS url
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.Options.RelationOptions.IdentityStaticToken">
            <summary>
            Identity MS static token
            </summary>
        </member>
        <member name="P:Xyzies.TWC.Public.Api.Models.Options.RelationOptions.VspVideoServiceUrl">
            <summary>
            VSP Video MS url
            </summary>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.Models.User">
            <summary>
            User profile information model
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Xyzies.TWC.Public.Data.TestSeed)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="testSeed"></param>
        </member>
        <member name="T:Xyzies.TWC.Public.Api.StartupException">
            <summary>
            Use this type of exception when configuration is wrong
            </summary>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.StartupException.#ctor(System.String)">
            <summary>
            Instantiate a new object of exception
            </summary>
            <param name="rootCause"></param>
        </member>
        <member name="M:Xyzies.TWC.Public.Api.StartupException.Throw(System.String)">
            <summary>
            Throw a StartupException
            </summary>
            <param name="rootCause"></param>
        </member>
    </members>
</doc>
